{"version":3,"sources":["components/contactForm/ContactFormStyled.js","components/contactForm/ContactForm.js","components/contactList/ContactListStyled.js","components/contactList/ContactList.js","components/filter/FilterStyled.js","components/filter/Filter.js","components/section/SectionStyled.js","components/section/Section.js","components/App.js","index.js"],"names":["ContactFormStyled","styled","form","initialState","name","number","ContactForm","state","onHandleChange","e","target","value","setState","onHandleSubmit","preventDefault","props","onSubmit","id","uuidv4","this","type","pattern","title","required","onChange","onClick","Component","ContactListStyled","ul","ContactList","getVisibleContacts","onDeleteContactById","deleteContact","map","className","FilterStyled","div","Filter","onFilterChange","filter","SectionStyled","section","Section","children","contacts","App","contact","some","item","toLocaleLowerCase","alert","prev","includes","toObject","JSON","parse","localStorage","getItem","prevState","toString","stringify","setItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kTAGaA,EAAoBC,IAAOC,KAAV,+I,OCCxBC,EAAc,CAClBC,KAAM,GACNC,OAAQ,IAGJC,E,4MACJC,M,eACKJ,G,EAGLK,eAAiB,SAACC,GAChB,MAAsBA,EAAEC,OAAjBN,EAAP,EAAOA,KAAMO,EAAb,EAAaA,MACb,EAAKC,SAAL,eACGR,EAAMO,K,EAIXE,eAAiB,SAACJ,GAChBA,EAAEK,iBACF,EAAKC,MAAMC,SAAX,2BAAwB,EAAKT,OAA7B,IAAoCU,GAAIC,iBACxC,EAAKN,SAAL,eACKT,K,4CAIP,WACE,MAAuBgB,KAAKZ,MAArBH,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OACb,OACI,eAACL,EAAD,CAAmBgB,SAAUG,KAAKN,eAAlC,UACE,yCAEC,uBACD,uBACEO,KAAK,OACLhB,KAAK,OACLiB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUL,KAAKX,eACfG,MAAOP,OAGT,2CAEC,uBACD,uBACEgB,KAAK,MACLhB,KAAK,SACLiB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUL,KAAKX,eACfG,MAAON,OAGT,wBAAQe,KAAK,SAASK,QAASN,KAAKN,eAApC,gC,GAlDgBa,aAwDXpB,IC/DFqB,EAAoB1B,IAAO2B,GAAV,0OCyBfC,EArBK,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,mBAAoBC,EAAyB,EAAzBA,oBAEnCC,EAAgB,SAACvB,GAAD,OAAOsB,EAAoBtB,EAAEC,OAAOO,KAE1D,OACA,cAACU,EAAD,UACGG,IAAqBG,KAAI,gBAAE7B,EAAF,EAAEA,KAAMC,EAAR,EAAQA,OAAQY,EAAhB,EAAgBA,GAAhB,OAAwB,6BAChD,sBAAKiB,UAAU,UAAf,UACA,oBAAGA,UAAU,OAAb,UAAqB9B,EAArB,IAA4BC,KAC5B,wBAAQe,KAAK,SAASH,GAAIA,EAAIQ,QAASO,EAAvC,wBAHyDf,SCVlDkB,EAAelC,IAAOmC,IAAV,mDC4BVC,EA1BA,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,eAAgBC,EAAY,EAAZA,OAE/B,OACA,cAACJ,EAAD,UACE,0DAEA,uBACA,uBACIxB,MAAO4B,EACPf,SAAUc,EACVlB,KAAK,OACLhB,KAAK,SACLiB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,UChBHiB,EAAgBvC,IAAOwC,QAAV,sMCWXC,EATC,SAAC,GAAuB,IAAtBpB,EAAqB,EAArBA,MAAOqB,EAAc,EAAdA,SACvB,OACE,eAACH,EAAD,WACE,oBAAIN,UAAU,QAAd,SAAuBZ,IACtBqB,MCDDxC,EAAe,CACnByC,SAAU,CACR,CAAC3B,GAAI,OAAQb,KAAM,gBAAiBC,OAAQ,aAC5C,CAACY,GAAI,OAAQb,KAAM,iBAAkBC,OAAQ,aAC7C,CAACY,GAAI,OAAQb,KAAM,gBAAiBC,OAAQ,aAC5C,CAACY,GAAI,OAAQb,KAAM,iBAAkBC,OAAQ,cAE/CkC,OAAQ,IAGJM,E,4MAEJtC,M,eACKJ,G,EAmBPmC,eAAiB,SAAC7B,GAChB,MAAsBA,EAAEC,OAAjBN,EAAP,EAAOA,KAAMO,EAAb,EAAaA,MACb,EAAKC,SAAL,eACGR,EAAMO,K,EAIXK,SAAW,SAAC8B,GACPA,EAAQ1C,MAAQ0C,EAAQzC,OACzB,EAAKE,MAAMqC,SAASG,MAAK,SAACC,GAAD,OAAUA,EAAK5C,KAAK6C,sBAAwBH,EAAQ1C,KAAK6C,uBAAuBC,MAAM,GAAD,OAAIJ,EAAQ1C,KAAZ,6BAC9G,EAAKQ,UAAS,SAAAuC,GAAI,MAAK,CACrBP,SAAS,GAAD,mBAAMO,EAAKP,UAAX,CAAqBE,QAIjCI,MAAM,yB,EAGRnB,oBAAsB,SAACd,GACrB,EAAKL,UAAS,SAAAuC,GAAI,MAAK,CACrBP,SAAUO,EAAKP,SAASL,QAAO,SAACO,GAAD,OAAaA,EAAQ7B,KAAOA,U,EAI/Da,mBAAqB,WACnB,MAA2B,EAAKvB,MAAzBqC,EAAP,EAAOA,SAAUL,EAAjB,EAAiBA,OACjB,OAAOK,EAASL,QAAO,SAACO,GAAD,OAAaA,EAAQ1C,KAAK6C,oBAAoBG,SAASb,EAAOU,yB,uDA1CvF,WACE,IAAMI,EAAWC,KAAKC,MAAMC,aAAaC,QAAQ,aAC9CJ,GACClC,KAAKP,SAAS,CAChBgC,SAASS,M,gCAIb,SAAmBK,GACjB,GAAIvC,KAAKZ,MAAMqC,WAAac,EAAY,CACtC,IAAMC,EAAWL,KAAKM,UAAUzC,KAAKZ,MAAMqC,UAC3CY,aAAaK,QAAQ,WAAYF,M,oBAmCnC,WAEE,MAA2BxC,KAAKZ,MAAzBqC,EAAP,EAAOA,SAAUL,EAAjB,EAAiBA,OAEjB,OACA,qCACE,cAAC,EAAD,CAASjB,MAAM,YAAf,SACE,cAAC,EAAD,CAAaN,SAAUG,KAAKH,aAG9B,eAAC,EAAD,CAASM,MAAM,WAAf,UACE,cAAC,EAAD,CAAQgB,eAAgBnB,KAAKmB,eAAgBC,OAAQA,IACrD,cAAC,EAAD,CAAaT,mBAAoBX,KAAKW,mBAAoBc,SAAUA,EAAUb,oBAAqBZ,KAAKY,gC,GAhE9FL,aAuEHmB,ICnFfiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a45ad432.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\n\r\nexport const ContactFormStyled = styled.form `\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  input, button {\r\n    margin: 5px 0;\r\n  }\r\n`","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { ContactFormStyled } from './ContactFormStyled';\r\n\r\nconst initialState= { \r\n  name: '',\r\n  number: '',\r\n }\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    ...initialState,\r\n  }\r\n\r\n  onHandleChange = (e) => {\r\n    const {name, value} = e.target;\r\n    this.setState({\r\n      [name]:value,\r\n    })\r\n  }\r\n  \r\n  onHandleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit({...this.state, id: uuidv4()});\r\n    this.setState({\r\n      ...initialState,\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    const {name, number} = this.state;\r\n    return (\r\n        <ContactFormStyled onSubmit={this.onHandleSubmit}>\r\n          <label>\r\n           Name \r\n           <br/>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.onHandleChange}\r\n            value={name}\r\n          />\r\n          </label>\r\n          <label>\r\n           Number\r\n           <br/>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.onHandleChange}\r\n            value={number}\r\n          />\r\n          </label>\r\n          <button type='submit' onClick={this.onHandleSubmit}>Add contact</button>\r\n        </ContactFormStyled>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;","import styled from 'styled-components';\r\n\r\nexport const ContactListStyled = styled.ul `\r\n  list-style: none;\r\n\r\n  .wrapper {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    \r\n  }\r\n\r\n  .text {\r\n    margin: 5px 0;\r\n  }\r\n\r\n  button {\r\n    height: 25px;\r\n    margin-right: 20px;\r\n  }\r\n`","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { ContactListStyled } from './ContactListStyled';\r\n\r\n\r\n\r\nconst ContactList = ({ getVisibleContacts, onDeleteContactById}) => {\r\n  \r\n  const deleteContact = (e) => onDeleteContactById(e.target.id);\r\n\r\n  return (\r\n  <ContactListStyled>\r\n    {getVisibleContacts().map(({name, number, id}) => <li key={id}>\r\n      <div className='wrapper'>\r\n      <p className='text'>{name} {number}</p> \r\n      <button type='button' id={id} onClick={deleteContact}>delete</button> \r\n      </div>\r\n    </li>)}\r\n  </ContactListStyled>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  getVisibleContacts: PropTypes.func,\r\n  onDeleteContactById: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;","import styled from 'styled-components';\r\n\r\nexport const FilterStyled = styled.div `\r\n  text-align: center;\r\n`","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { FilterStyled } from './FilterStyled';\r\n\r\nconst Filter = ({onFilterChange, filter}) => {\r\n\r\n  return (\r\n  <FilterStyled>\r\n    <label>\r\n    Find contacts by name\r\n    <br/>\r\n    <input\r\n        value={filter}\r\n        onChange={onFilterChange}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n    </label>\r\n  </FilterStyled>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  onFilterChange: PropTypes.func,\r\n  filter: PropTypes.string,\r\n};\r\n\r\nexport default Filter;","import styled from 'styled-components';\r\n\r\nexport const SectionStyled = styled.section `\r\n    margin-top: 10px;\r\n    margin-left: 10px;\r\n    border: 2px solid lightgrey;\r\n    border-radius: 10px;\r\n    width: 50%;\r\n\r\n  .title {\r\n    text-align: center;\r\n  }\r\n\r\n`","import React from 'react'\r\nimport { SectionStyled } from './SectionStyled';\r\n\r\n\r\nconst Section = ({title, children}) => {\r\n  return (\r\n    <SectionStyled>\r\n      <h2 className='title'>{title}</h2>\r\n      {children}\r\n    </SectionStyled>\r\n  );\r\n}\r\n\r\nexport default Section;","import React, {Component} from \"react\";\r\nimport ContactForm from \"./contactForm/ContactForm\";\r\nimport ContactList from \"./contactList/ContactList\";\r\nimport Filter from \"./filter/Filter\";\r\nimport Section from \"./section/Section\";\r\n\r\n\r\nconst initialState = {    \r\n  contacts: [    \r\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'}\r\n  ],\r\n  filter: ''\r\n}\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    ...initialState,\r\n  }\r\n\r\ncomponentDidMount() {\r\n  const toObject = JSON.parse(localStorage.getItem('contacts'));\r\n  if(toObject) {\r\n      this.setState({\r\n    contacts:toObject\r\n  })}\r\n}\r\n\r\ncomponentDidUpdate(prevState) {\r\n  if (this.state.contacts !== prevState ) {\r\n    const toString = JSON.stringify(this.state.contacts);\r\n    localStorage.setItem('contacts', toString)\r\n  }\r\n}\r\n\r\n\r\nonFilterChange = (e) => {\r\n  const {name, value} = e.target;\r\n  this.setState({\r\n    [name]:value,\r\n  })\r\n} \r\n\r\nonSubmit = (contact) => {\r\n  if(contact.name && contact.number) {\r\n    this.state.contacts.some((item) => item.name.toLocaleLowerCase() === contact.name.toLocaleLowerCase()) ? alert(`${contact.name} is already in contacts.`) :\r\n    this.setState(prev => ({\r\n      contacts: [...prev.contacts, contact]\r\n    }))\r\n    return    \r\n  }\r\n  alert('Please, enter data !')\r\n}\r\n\r\nonDeleteContactById = (id) => {\r\n  this.setState(prev => ({\r\n    contacts: prev.contacts.filter((contact) => contact.id !== id)\r\n  }))\r\n}\r\n\r\ngetVisibleContacts = () => {\r\n  const {contacts, filter} = this.state;\r\n  return contacts.filter((contact) => contact.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase()))\r\n}\r\n\r\n    \r\n  render() {\r\n\r\n    const {contacts, filter} = this.state\r\n\r\n    return (\r\n    <>\r\n      <Section title='Phonebook'>\r\n        <ContactForm onSubmit={this.onSubmit}/>\r\n      </Section>\r\n\r\n      <Section title=\"Contacts\">\r\n        <Filter onFilterChange={this.onFilterChange} filter={filter}/>\r\n        <ContactList getVisibleContacts={this.getVisibleContacts} contacts={contacts} onDeleteContactById={this.onDeleteContactById}/>\r\n      </Section>\r\n    </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}